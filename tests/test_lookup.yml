---

- name: Test rbw_structured Lookup Plugin
  hosts: localhost
  gather_facts: false
  vars:
    json_entry: "dd8f05d9-a299-4277-b303-f2eb3e145f7e"            # Note mit JSON
    login_entry: "9df68258-6d51-4b5f-a618-86d8993836a7"           # Login mit username/password
    raw_note: "e170256d-984e-42a2-98ab-19f11e4e16c7"              # Note mit einfachem Text
    broken_json_entry: "48a33ff3-d94a-4ebb-ae10-90bd9c3e122b"     # Note mit ungültigem JSON

  tasks:
    - name: "Test: String lesen"
      debug:
        msg: "Raw note: {{ lookup('bodsch.vaultwarden.rbw', raw_note) }}"

    - name: "Test: Login-Feld (username)"
      debug:
        msg: "Username: {{ lookup(
            'bodsch.vaultwarden.rbw',
            {
              'folder': 'general',
              'name': 'geoip'
            },
            field='LicenseKey',
            use_index=false
          ) }}"

    - name: "Test: Login-Feld (password)"
      debug:
        msg: "Password: {{ lookup('bodsch.vaultwarden.rbw', login_entry, field='password') }}"

    - name: "Test: JSON parsen"
      set_fact:
        json_data: "{{ lookup('bodsch.vaultwarden.rbw', json_entry, parse_json=True) }}"

    - name: "Test: Multi fetch"
      set_fact:
        multi_data: "{{ lookup('bodsch.vaultwarden.rbw', raw_note, login_entry) }}"

    - name: "Test: Lookup mit Index-Daten (name, folder, user)"
      set_fact:
        indexed_entry: "{{ lookup(
            'bodsch.vaultwarden.rbw',
              {'name': 'ldap', 'folder': '', 'user': ''},
          field='password',
          use_index=True) }}"

    - name: "Ausgabe: Indexed Entry"
      debug:
        msg: "Indexed Entry: {{ indexed_entry }}"

    - name: "Ausgabe: JSON-Felder"
      debug:
        msg:
          - "Token: {{ json_data.token | default('nicht gesetzt') }}"
          - "URL: {{ json_data.url | default('nicht gesetzt') }}"

    - name: "Ausgabe: Multi fetch"
      debug:
        msg:
          - "Multi Data: {{ multi_data | default('nicht gesetzt') }}"

    - name: "Test: Defektes JSON → Fallback zu leerem Dict"
      set_fact:
        broken: "{{ lookup('bodsch.vaultwarden.rbw', broken_json_entry, parse_json=True) }}"

    - name: "Ausgabe: Fallback-JSON"
      debug:
        var: broken

    - name: "Test: Striktes JSON → Fehler"
      block:
        - set_fact:
            broken_strict: "{{ lookup('bodsch.vaultwarden.rbw', broken_json_entry, parse_json=True, strict_json=True) }}"
        - debug:
            var: broken_strict
      rescue:
        - debug:
            msg: "Wie erwartet: JSON ungültig – Fehler behandelt."

